import bisect
import numpy as np
import albumentations
from PIL import Image
from torch.utils.data import Dataset, ConcatDataset
from my_code.utils import detect_motion_iterative, signal_crop, norm_sig
from scipy.ndimage import zoom
import torch

class EEGPaths(Dataset):
    def __init__(self, paths, size=None, labels=None):
        self.size = size
        self.labels = dict() if labels is None else labels
        self.labels["file_path_"] = paths
        self._length = len(paths)
        self.mean = np.array([[ 4.12685013e+00],
       [ 1.04815931e+01],
       [ 1.42342520e+01],
       [ 1.63087978e+01],
       [ 1.73753490e+01],
       [ 1.76010342e+01],
       [ 1.73723202e+01],
       [ 1.69775620e+01],
       [ 1.65113182e+01],
       [ 1.59732475e+01],
       [ 1.53520842e+01],
       [ 1.47652063e+01],
       [ 1.42489700e+01],
       [ 1.38258190e+01],
       [ 1.34953499e+01],
       [ 1.31922884e+01],
       [ 1.29166164e+01],
       [ 1.26480455e+01],
       [ 1.23685417e+01],
       [ 1.21031103e+01],
       [ 1.18403025e+01],
       [ 1.15803804e+01],
       [ 1.13428745e+01],
       [ 1.10947161e+01],
       [ 1.08476877e+01],
       [ 1.06046753e+01],
       [ 1.03427248e+01],
       [ 1.01037941e+01],
       [ 9.87893772e+00],
       [ 9.65994835e+00],
       [ 9.47191238e+00],
       [ 9.27765465e+00],
       [ 9.08959579e+00],
       [ 8.91416264e+00],
       [ 8.73764420e+00],
       [ 8.61987495e+00],
       [ 8.47846889e+00],
       [ 8.34432983e+00],
       [ 8.32482624e+00],
       [ 8.17177391e+00],
       [ 8.05052567e+00],
       [ 7.95089912e+00],
       [ 7.75220728e+00],
       [ 7.66425753e+00],
       [ 7.59814787e+00],
       [ 7.55471611e+00],
       [ 7.54066515e+00],
       [ 7.51674080e+00],
       [ 7.50019360e+00],
       [ 7.48568535e+00],
       [ 7.45508337e+00],
       [ 7.45468044e+00],
       [ 7.46352482e+00],
       [ 7.46711016e+00],
       [ 7.49470663e+00],
       [ 7.50254345e+00],
       [ 7.49641085e+00],
       [ 7.48884010e+00],
       [ 7.45427704e+00],
       [ 7.43605614e+00],
       [ 7.41363525e+00],
       [ 7.38500452e+00],
       [ 7.36511755e+00],
       [ 7.31957150e+00],
       [ 7.26887560e+00],
       [ 7.21587038e+00],
       [ 7.12910509e+00],
       [ 7.06161404e+00],
       [ 6.98565769e+00],
       [ 6.90052128e+00],
       [ 6.84158945e+00],
       [ 6.76256990e+00],
       [ 6.68096352e+00],
       [ 6.59567070e+00],
       [ 6.48599577e+00],
       [ 6.39109850e+00],
       [ 6.29762363e+00],
       [ 6.21054363e+00],
       [ 6.14026546e+00],
       [ 6.05006742e+00],
       [ 5.95027637e+00],
       [ 5.84432507e+00],
       [ 5.71215439e+00],
       [ 5.59797335e+00],
       [ 5.48690510e+00],
       [ 5.37460470e+00],
       [ 5.27627516e+00],
       [ 5.16500950e+00],
       [ 5.05112886e+00],
       [ 4.93809938e+00],
       [ 4.80560493e+00],
       [ 4.69782925e+00],
       [ 4.58894396e+00],
       [ 4.48551178e+00],
       [ 4.40501738e+00],
       [ 4.31316233e+00],
       [ 4.24359417e+00],
       [ 4.18511486e+00],
       [ 4.09482861e+00],
       [ 4.02977514e+00],
       [ 3.96311569e+00],
       [ 3.90115023e+00],
       [ 3.88580942e+00],
       [ 3.88665032e+00],
       [ 3.91600680e+00],
       [ 4.00339842e+00],
       [ 4.14197969e+00],
       [ 4.26576805e+00],
       [ 4.32188416e+00],
       [ 4.22998714e+00],
       [ 4.00550079e+00],
       [ 3.74376106e+00],
       [ 3.46660805e+00],
       [ 3.25196195e+00],
       [ 3.04599166e+00],
       [ 2.87075114e+00],
       [ 2.69785213e+00],
       [ 2.54706836e+00],
       [ 2.51359248e+00],
       [ 2.38954973e+00],
       [ 2.26638699e+00],
       [ 2.14893723e+00],
       [ 1.91838682e+00],
       [ 1.79276574e+00],
       [ 1.67289400e+00],
       [ 1.55348778e+00],
       [ 1.45289481e+00],
       [ 1.34986699e+00],
       [ 1.25529695e+00],
       [ 1.16862559e+00],
       [ 1.07192826e+00],
       [ 9.90208030e-01],
       [ 9.06782448e-01],
       [ 8.24784517e-01],
       [ 7.56854534e-01],
       [ 6.85673237e-01],
       [ 6.18979275e-01],
       [ 5.55833399e-01],
       [ 4.82936054e-01],
       [ 4.20245409e-01],
       [ 3.56078625e-01],
       [ 2.93630928e-01],
       [ 2.42516667e-01],
       [ 1.86392576e-01],
       [ 1.35041237e-01],
       [ 9.03274342e-02],
       [ 4.66384143e-02],
       [ 3.43031483e-03],
       [-5.11195809e-02],
       [-1.15079135e-01],
       [-1.81606799e-01],
       [-2.51107514e-01],
       [-3.08326423e-01],
       [-3.56585592e-01],
       [-4.18025106e-01],
       [-4.70588207e-01],
       [-5.27321875e-01],
       [-5.86282074e-01],
       [-6.35107398e-01],
       [-6.89700544e-01],
       [-7.38347411e-01],
       [-7.87652254e-01],
       [-8.47587407e-01],
       [-9.02912676e-01],
       [-9.68006611e-01],
       [-1.03299618e+00],
       [-1.08388698e+00],
       [-1.14129591e+00],
       [-1.19343102e+00],
       [-1.23893154e+00],
       [-1.29891992e+00],
       [-1.35095263e+00],
       [-1.41105914e+00],
       [-1.47570753e+00],
       [-1.52426255e+00],
       [-1.57818961e+00],
       [-1.62519062e+00],
       [-1.66641450e+00],
       [-1.71929872e+00],
       [-1.76762545e+00],
       [-1.82270682e+00],
       [-1.88037145e+00],
       [-1.92769170e+00],
       [-1.98072016e+00],
       [-2.02762175e+00],
       [-2.07467866e+00],
       [-2.13195276e+00],
       [-2.19050717e+00],
       [-2.26269126e+00],
       [-2.33719015e+00],
       [-2.40514708e+00],
       [-2.48042822e+00],
       [-2.54366589e+00],
       [-2.59563708e+00],
       [-2.65417576e+00],
       [-2.70660996e+00],
       [-2.76808786e+00],
       [-2.82567668e+00],
       [-2.54182148e+00],
       [-2.60521436e+00],
       [-2.66122675e+00],
       [-2.70946836e+00],
       [-3.08868361e+00],
       [-3.19203281e+00],
       [-3.27216673e+00],
       [-3.35400915e+00],
       [-3.42301154e+00],
       [-3.49163890e+00],
       [-3.54023314e+00],
       [-3.57106733e+00],
       [-3.60972118e+00],
       [-3.65707541e+00],
       [-3.71571875e+00],
       [-3.77202201e+00],
       [-3.82289219e+00],
       [-3.87252116e+00],
       [-3.91639686e+00],
       [-3.96113229e+00],
       [-4.02419519e+00],
       [-4.09223080e+00],
       [-4.17490911e+00],
       [-4.26661110e+00],
       [-4.32566261e+00],
       [-4.38472366e+00],
       [-4.42508078e+00],
       [-4.44898033e+00],
       [-4.48713446e+00],
       [-4.51400423e+00],
       [-4.55799389e+00],
       [-4.60966492e+00],
       [-4.64379168e+00],
       [-4.67913437e+00],
       [-4.68737411e+00],
       [-4.67032099e+00],
       [-4.66047144e+00],
       [-4.64498329e+00],
       [-4.64445019e+00],
       [-4.66094875e+00],
       [-4.67002916e+00],
       [-4.68153143e+00],
       [-4.66618538e+00],
       [-4.62097073e+00],
       [-4.58097410e+00],
       [-4.53604841e+00],
       [-4.51124334e+00],
       [-4.50441837e+00],
       [-4.50849390e+00],
       [-4.51633263e+00],
       [-4.50380087e+00],
       [-4.46233130e+00],
       [-4.40670919e+00],
       [-4.36186981e+00],
       [-4.34206533e+00],
       [-4.35226202e+00],
       [-4.39808893e+00],
       [-4.52837706e+00]])
        self.std = np.array([[6.3726087],
       [6.4202757],
       [6.5997653],
       [6.7227125],
       [6.770814 ],
       [6.7577815],
       [6.6286573],
       [6.4546585],
       [6.2836814],
       [6.1562343],
       [6.074903 ],
       [6.000178 ],
       [5.9087996],
       [5.802371 ],
       [5.681643 ],
       [5.5616264],
       [5.4445643],
       [5.34511  ],
       [5.264701 ],
       [5.197284 ],
       [5.1362457],
       [5.0814285],
       [5.037676 ],
       [4.9915533],
       [4.950635 ],
       [4.911183 ],
       [4.8522677],
       [4.805668 ],
       [4.7649775],
       [4.7161336],
       [4.684549 ],
       [4.643217 ],
       [4.6028233],
       [4.571224 ],
       [4.566328 ],
       [4.6448784],
       [4.629967 ],
       [4.6077657],
       [4.722772 ],
       [4.597879 ],
       [4.5350537],
       [4.4962983],
       [4.2934837],
       [4.247215 ],
       [4.216741 ],
       [4.1928616],
       [4.1862416],
       [4.1600094],
       [4.1330895],
       [4.108355 ],
       [4.0671144],
       [4.05355  ],
       [4.056869 ],
       [4.04875  ],
       [4.056242 ],
       [4.0515733],
       [4.0365596],
       [4.026993 ],
       [4.0123024],
       [4.011259 ],
       [4.010326 ],
       [4.007858 ],
       [4.0207114],
       [4.017657 ],
       [4.0175605],
       [4.0344133],
       [4.01764  ],
       [4.0196   ],
       [4.013664 ],
       [3.986355 ],
       [3.9905152],
       [3.98258  ],
       [3.977841 ],
       [3.9721005],
       [3.9543872],
       [3.9447746],
       [3.9338284],
       [3.9352715],
       [3.9472375],
       [3.9485636],
       [3.9488835],
       [3.9453506],
       [3.9220893],
       [3.9164236],
       [3.9138594],
       [3.9131315],
       [3.9276268],
       [3.9313521],
       [3.940015 ],
       [3.9493303],
       [3.9467742],
       [3.961566 ],
       [3.9767542],
       [3.994984 ],
       [4.035502 ],
       [4.073142 ],
       [4.149359 ],
       [4.2434316],
       [4.2684116],
       [4.305558 ],
       [4.325531 ],
       [4.338026 ],
       [4.4217877],
       [4.5432825],
       [4.720381 ],
       [5.051274 ],
       [5.515738 ],
       [5.9376717],
       [6.226878 ],
       [6.1799097],
       [5.8384156],
       [5.4403706],
       [5.0391417],
       [4.8041744],
       [4.6364574],
       [4.53939  ],
       [4.468368 ],
       [4.4398556],
       [4.61953  ],
       [4.6436357],
       [4.6699476],
       [4.7070446],
       [4.5550294],
       [4.572127 ],
       [4.5955925],
       [4.611965 ],
       [4.6394706],
       [4.6645536],
       [4.6941695],
       [4.7210045],
       [4.7357054],
       [4.7619033],
       [4.785277 ],
       [4.807797 ],
       [4.8379636],
       [4.8600073],
       [4.8805523],
       [4.9002614],
       [4.9068418],
       [4.9233155],
       [4.9425654],
       [4.9619975],
       [4.9976177],
       [5.0219736],
       [5.0463166],
       [5.075566 ],
       [5.1159344],
       [5.1458154],
       [5.172107 ],
       [5.182668 ],
       [5.1781907],
       [5.1809487],
       [5.18568  ],
       [5.1997547],
       [5.1990066],
       [5.212918 ],
       [5.2318287],
       [5.253251 ],
       [5.2838497],
       [5.3073373],
       [5.3389697],
       [5.3545218],
       [5.362437 ],
       [5.378739 ],
       [5.3859005],
       [5.3999963],
       [5.426564 ],
       [5.446775 ],
       [5.462934 ],
       [5.477979 ],
       [5.482709 ],
       [5.4978824],
       [5.518496 ],
       [5.540356 ],
       [5.578365 ],
       [5.603779 ],
       [5.627112 ],
       [5.6481724],
       [5.6590824],
       [5.686512 ],
       [5.723909 ],
       [5.767159 ],
       [5.825705 ],
       [5.868149 ],
       [5.8945775],
       [5.896758 ],
       [5.893445 ],
       [5.8991623],
       [5.9064717],
       [5.9288397],
       [5.9596677],
       [5.9710097],
       [5.980808 ],
       [5.985379 ],
       [5.9836884],
       [6.005921 ],
       [6.0434093],
       [6.1034694],
       [6.817472 ],
       [6.8583746],
       [6.880108 ],
       [6.888336 ],
       [6.260551 ],
       [6.200613 ],
       [6.214679 ],
       [6.242778 ],
       [6.287717 ],
       [6.3236995],
       [6.353592 ],
       [6.381815 ],
       [6.403578 ],
       [6.428635 ],
       [6.4729786],
       [6.550006 ],
       [6.629839 ],
       [6.6912813],
       [6.7227516],
       [6.7106147],
       [6.674679 ],
       [6.6529675],
       [6.6497827],
       [6.65482  ],
       [6.6930137],
       [6.718118 ],
       [6.729994 ],
       [6.730759 ],
       [6.7130704],
       [6.726048 ],
       [6.745235 ],
       [6.7737346],
       [6.820014 ],
       [6.8400793],
       [6.859602 ],
       [6.8751073],
       [6.872759 ],
       [6.8923306],
       [6.916307 ],
       [6.9397326],
       [6.9732547],
       [6.9913044],
       [7.005898 ],
       [7.016865 ],
       [7.008448 ],
       [7.020562 ],
       [7.038529 ],
       [7.0656924],
       [7.093011 ],
       [7.1078615],
       [7.110768 ],
       [7.106294 ],
       [7.1152596],
       [7.131241 ],
       [7.146582 ],
       [7.1622477],
       [7.180978 ],
       [7.218156 ]])
    
    def __len__(self):
        return self._length

    def preprocess_eeg(self, eeg_path):
        # print(f'image_path: {image_path}')
        eeg = np.load(eeg_path)['data']

        if eeg.shape[1] >= self.size:
            feature = eeg[:, :self.size]
        else:
            feature = np.pad(eeg, ((0, 0), (0, self.size - eeg.shape[1])))
        assert feature.shape[0] == 256
        assert feature.shape[1] == 1200

        feature = feature.astype(np.float32)
        feature = (feature - self.mean) / self.std

        #add one channel to the end
        feature = np.expand_dims(feature, axis=-1)

        return feature

    def __getitem__(self, i):
        example = dict()
        example["image"] = self.preprocess_eeg(self.labels["file_path_"][i])
        for k in self.labels:
            example[k] = self.labels[k][i]
        return example
